---
- name: set vars
  set_fact:
    docker_image: '{{ app_smokeping_docker_image }}'
    docker_container: '{{ app_smokeping_docker_container }}'
    docker_volume_config: '{{ app_smokeping_docker_volume_config }}'
    docker_volume_data: '{{ app_smokeping_docker_volume_data }}'
    docker_network: '{{ app_smokeping_docker_network }}'

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create config volume
  community.docker.docker_volume:
    name: "{{ docker_volume_config }}"

- name: Create data volume
  community.docker.docker_volume:
    name: "{{ docker_volume_data }}"

- name: Create network
  community.docker.docker_network:
    name: "{{ docker_network }}"
    driver_options:
          com.docker.network.bridge.name: "br-{{ docker_network }}"

- name: Create smokeping container
  community.docker.docker_container:
    env:
     TZ: "{{app_smokeping_tz}}"
    image: "{{ docker_image }}"
    mounts:
     - source: "{{ docker_volume_config }}"
       target: /config
     - source: "{{ docker_volume_data }}"
       target: /data
    name: "{{ docker_container }}"
    networks:
     - name: "{{ docker_network }}"
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false
